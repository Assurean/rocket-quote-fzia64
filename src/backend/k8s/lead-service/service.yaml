apiVersion: v1
kind: Service
metadata:
  name: lead-service
  namespace: default
  labels:
    app: lead-service
    component: backend
    version: v1
    part-of: lead-generation-platform
  annotations:
    # Prometheus monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
    
    # Istio service mesh configuration
    sidecar.istio.io/inject: "true"
    service.istio.io/canonical-name: "lead-service"
    service.istio.io/canonical-revision: "v1"
    
    # Service metadata
    service.kubernetes.io/description: "Lead processing microservice for insurance platform"
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    
    # Traffic management
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "30"

spec:
  type: ClusterIP
  ports:
    # Main application port
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
      appProtocol: http
    
    # Metrics port for Prometheus scraping
    - name: metrics
      port: 3000
      targetPort: 3000
      protocol: TCP
      appProtocol: http
  
  # Selector matching deployment labels
  selector:
    app: lead-service
    version: v1
  
  # Session handling configuration  
  sessionAffinity: None
  
  # Service mesh and networking configuration
  publishNotReadyAddresses: false
  internalTrafficPolicy: Cluster
  
  # Health check configuration
  healthCheckNodePort: 0
  externalTrafficPolicy: Cluster