apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-kong
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: api-gateway
  annotations:
    # AWS NLB Configuration
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
    # TCP keepalive for long-lived connections
    service.beta.kubernetes.io/aws-load-balancer-tcp-keepalive-timeout: "300"
    service.beta.kubernetes.io/aws-load-balancer-tcp-keepalive-interval: "60"
    # Health check configuration
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "TCP"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "8000"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "6"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    # Prometheus metrics scraping
    prometheus.io/scrape: "true"
    prometheus.io/port: "8100"
    prometheus.io/path: "/metrics"
    {{- if .Values.kong.service.annotations }}
    {{- toYaml .Values.kong.service.annotations | nindent 4 }}
    {{- end }}
spec:
  type: {{ .Values.kong.service.type | default "LoadBalancer" }}
  ports:
    # HTTP proxy port
    - name: proxy
      port: 80
      targetPort: 8000
      protocol: TCP
    # HTTPS proxy port
    - name: proxy-ssl
      port: 443
      targetPort: 8443
      protocol: TCP
    # Metrics port for Prometheus
    - name: metrics
      port: 8100
      targetPort: 8100
      protocol: TCP
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api-gateway
  # Optimize for production workloads
  sessionAffinity: None
  externalTrafficPolicy: Local
  # Enable cross-zone load balancing
  loadBalancerSourceRanges:
    - 0.0.0.0/0
  # Ensure high availability
  publishNotReadyAddresses: false