apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kong
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: insurance-platform
  annotations:
    security.policy/version: {{ .Values.security.policyVersion }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.kong.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: api-gateway
      annotations:
        prometheus.io/scrape: {{ .Values.monitoring.enabled | quote }}
        prometheus.io/port: "8100"
        prometheus.io/path: /metrics
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ .Chart.Name }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
      containers:
      - name: kong
        image: {{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag }}
        imagePullPolicy: {{ .Values.kong.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        env:
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 ssl http2"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 ssl http2"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout json"
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout json"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_DECLARATIVE_CONFIG
          value: "/kong/declarative/kong.yaml"
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-ssl
          containerPort: 8443
          protocol: TCP
        - name: metrics
          containerPort: 8100
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.kong.resources.requests.cpu }}
            memory: {{ .Values.kong.resources.requests.memory }}
          limits:
            cpu: {{ .Values.kong.resources.limits.cpu }}
            memory: {{ .Values.kong.resources.limits.memory }}
        volumeMounts:
        - name: kong-config
          mountPath: /kong/declarative
          readOnly: true
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /status
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /status
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /status
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30
      volumes:
      - name: kong-config
        configMap:
          name: {{ .Release.Name }}-kong-config
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 60